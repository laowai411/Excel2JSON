
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import org.json.JSONException;
import org.json.JSONObject;

import parser.ParserUtil;
import common.ExtensionConst;
import common.Global;
import common.LogUtil;
import etc.ConfigManager;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author AngryPotato
 */
@SuppressWarnings("serial")
public class Excel2JSON extends javax.swing.JFrame {

    /**
     * 文件选择窗口
     *
     */
    private JFileChooser fileChooser = new JFileChooser();
    
    /**
     * 当前选择的目录
     * */
    private File selecteDir;

    /**
     * Creates new form Window
     */
    public Excel2JSON() {
    	Global.setRunPath(Excel2JSON.class);
        initComponents();
        setTitle("Excel2JSON");
        readConfig();
        updateViewConfig();
        initFileChooser();
        Global.registerJButton(gBtnCreateJSON);
        Global.registerJButton(gBtnCreateExcel);
        LogUtil.registerStateTxt(gTxtState);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
//    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gRadioGroup = new javax.swing.ButtonGroup();
        gLabDirPath = new javax.swing.JLabel();
        gTxtDirPath = new javax.swing.JTextField();
        gBtnSelect = new javax.swing.JButton();
        gBtnWatchExcel = new javax.swing.JButton();
        gBtnWatchJSON = new javax.swing.JButton();
        gBtnCreateJSON = new javax.swing.JButton();
        gBtnCreateExcel = new javax.swing.JButton();
        gBtnHelp = new javax.swing.JButton();
        gTxtState = new javax.swing.JTextArea();
        gRadioFormat = new javax.swing.JRadioButton();
	gRadioNoFormat = new javax.swing.JRadioButton();
	gRadioGroup.add(gRadioFormat);
	gRadioGroup.add(gRadioNoFormat);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        gLabDirPath.setText("Excel或json目录");

        gBtnSelect.setText("选择");
		gBtnSelect.setActionCommand("btnSelect");
        gBtnSelect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onClickSelectHandler(evt);
            }
        });

        gBtnWatchExcel.setText("查看Excel模版");
        gBtnWatchExcel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onClickWatchExcelHandler(evt);
            }
        });

        gBtnWatchJSON.setText("查看json模版");
        gBtnWatchJSON.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onClickWatchJSONHandler(evt);
            }
        });

        gBtnCreateJSON.setText("生成json");
        gBtnCreateJSON.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onClickCreateJSONHandler(evt);
            }
        });

        gBtnCreateExcel.setText("生成Excel");
        gBtnCreateExcel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onClickCreateExcelHandler(evt);
            }
        });

        gBtnHelp.setText("帮助");
        gBtnHelp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onClickHelpHandler(evt);
            }
        });

        gTxtState.setEditable(false);
        gTxtState.setText("等待...");

        gRadioFormat.setText("输出非格式化json");
        gRadioFormat.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                onSelectStateChangeHandler(evt);
            }
        });

        gRadioNoFormat.setText("输出格式化json");
        gRadioNoFormat.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                onSelectStateChangeHandler(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(gBtnWatchJSON)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(gLabDirPath, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gTxtDirPath, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(gBtnSelect))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(gBtnCreateJSON)
                        .addGap(65, 65, 65)
                        .addComponent(gBtnCreateExcel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gRadioFormat)
                            .addComponent(gRadioNoFormat))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(gBtnWatchExcel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(gTxtState, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gBtnHelp)
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gLabDirPath)
                    .addComponent(gTxtDirPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gBtnSelect))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gBtnWatchExcel)
                    .addComponent(gRadioFormat, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(gBtnWatchJSON)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(gRadioNoFormat)
                        .addGap(23, 23, 23)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gBtnCreateJSON)
                    .addComponent(gBtnCreateExcel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gBtnHelp)
                    .addComponent(gTxtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onSelectStateChangeHandler(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_onSelectStateChangeHandler
        
    }//GEN-LAST:event_onSelectStateChangeHandler

    /**
     * 初始化文件过滤器 目前只允许选择目录
     */
    private void initFileChooser() {
//        FileNameExtensionFilter filter = new FileNameExtensionFilter(
//                "Excel", "xls", "xlsm", "xlsx");
//
//        fileChooser.setFileFilter(filter);
//        filter = new FileNameExtensionFilter("JSON", "json");
//        fileChooser.addChoosableFileFilter(filter);
//        fileChooser.setMultiSelectionEnabled(true);
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    }

    /**
     * 点击了生成json按钮
     * */
    private void onClickCreateJSONHandler(java.awt.event.MouseEvent evt) {                                          
    	saveConfig();
        if(selecteDir != null)
        {
        	Global.setWindowEnable(false);
            ParserUtil.parse(selecteDir.listFiles(), ExtensionConst.EXCEL_TYPE);
        }
    }

    /**
     * 点击了选择按钮, 弹出选择目录窗体
     *
     */
    private void onClickSelectHandler(java.awt.event.MouseEvent evt) {
        fileChooser.showOpenDialog(this);
        selecteDir = fileChooser.getSelectedFile();
        if(selecteDir == null)
        {
        	selecteDir = new File(gTxtDirPath.getText());
        }
        if(selecteDir.exists() == true)
        {
        	Global.file_path = selecteDir.getPath().replace("\\", "\\\\");
        	updateViewConfig();
        }
    }
    
    /**
     * 保存配置
     * */
    private void saveConfig()
    {
    	if(Global.IS_DEBUG)
    	{
    		File file = new File(Global.getRunPath()+Global.config_path);
    		if(file.exists() == false)
    		{
    			try {
    				file.createNewFile();
    			} catch (IOException e) {
    				e.printStackTrace();
    				JOptionPane.showMessageDialog(null, "创建配置文件失败"+e.getMessage());
    				return;
    			}
    		}
    		FileWriter writer;
    		try {
    			writer = new FileWriter(file);
    			String jsonStr = "{\n" +
    					"\tdelay:"+Global.delay+",\n" +
    					"\tjsonFormat:"+gRadioFormat.isSelected()+",\n" +
    					"\tpath:\""+Global.file_path+"\"\n" +
    					"}";
    			writer.write(jsonStr);
    			writer.close();
    		} catch (IOException e) {
    			e.printStackTrace();
    		}
    	}
    }
    
    /**
     * 读取配置
     * */
    private void readConfig()
    {
    	File file = new File(Global.getRunPath()+Global.config_path);
    	if(file.exists() == false)
    	{
    		return;
    	}
    	BufferedReader reader = null;
		String dataStr = "";
		try {
			reader = new BufferedReader(new FileReader(file));
			String tempString = null;
			// 一次读入一行，直到读入null为文件结束
			while ((tempString = reader.readLine()) != null) {
				// 显示行号
				dataStr = dataStr.concat(tempString);
			}
			reader.close();
			JSONObject json = new JSONObject(dataStr);
			Global.file_path = json.getString("path").replace("\\", "\\\\");
			Global.export_json_format = json.getBoolean("jsonFormat");
			updateViewConfig();
		} catch (IOException e) {
			e.printStackTrace();
		} catch (JSONException e) {
			e.printStackTrace();
			JOptionPane.showMessageDialog(null, "配置文件数据不正确!");
		} finally {
			if (reader != null) {
				try {
					reader.close();
				} catch (IOException e1) {
				}
			}
		}
    }
    
    /**
     * 更新界面上的配置显示
     * */
    private void updateViewConfig()
    {
    	this.gTxtDirPath.setText(Global.file_path);
    	this.gRadioFormat.setSelected(Global.export_json_format);
    	this.selecteDir = new File(Global.file_path);
    }

    /**
     * 点击了生成Excel按钮
     *
     */
    private void onClickCreateExcelHandler(java.awt.event.MouseEvent evt) {                                           
    	saveConfig();
        if(selecteDir != null)
        {
        	Global.setWindowEnable(false);
        	
            ParserUtil.parse(selecteDir.listFiles(), ExtensionConst.JSON_TYPE);
        }
    }

    
    /**
     * 点击了帮助按钮
     * */
    private void onClickHelpHandler(java.awt.event.MouseEvent evt) {
    	try {
    		Desktop.getDesktop().open(new File(Global.getRunPath()+Global.readMe_path));
		} catch (IOException e) {
			JOptionPane.showMessageDialog(null, "无法自动打开,请手动打开\n"+Global.getRunPath()+Global.readMe_path);
		}
    }

    private void onClickWatchJSONHandler(java.awt.event.MouseEvent evt) {                                         
        try {
        	Runtime.getRuntime().exec(ConfigManager.cmdOpenTemplateDir());
		} catch (IOException e) {
		}
       
    }

    private void onClickWatchExcelHandler(java.awt.event.MouseEvent evt) {                                          
         try {
        	 Runtime.getRuntime().exec(ConfigManager.cmdOpenTemplateDir());
		} catch (IOException e) {
		}
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Excel2JSON.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Excel2JSON.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Excel2JSON.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Excel2JSON.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Excel2JSON().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton gBtnCreateJSON;
    private javax.swing.JButton gBtnCreateExcel;
    private javax.swing.JButton gBtnHelp;
    private javax.swing.JButton gBtnSelect;
    private javax.swing.JButton gBtnWatchExcel;
    private javax.swing.JButton gBtnWatchJSON;
    private javax.swing.JLabel gLabDirPath;
    private javax.swing.JRadioButton gRadioFormat;
    private javax.swing.ButtonGroup gRadioGroup;
    private javax.swing.JRadioButton gRadioNoFormat;
    private javax.swing.JTextField gTxtDirPath;
    private javax.swing.JTextArea gTxtState;
    // End of variables declaration//GEN-END:variables
}
